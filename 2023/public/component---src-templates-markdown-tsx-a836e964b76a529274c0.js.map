{"version":3,"file":"component---src-templates-markdown-tsx-a836e964b76a529274c0.js","mappings":"+LASA,MAAMA,EAAMC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAVJ,CAAU,mBAGhBK,EAAOL,EAAAA,QAAOM,KAAIJ,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAXJ,CAAW,6HAKPO,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,MAAMC,MAAM,IAI3C,SAASC,EAAWC,GACzB,MAAM,KAAEC,GAASD,GACX,EAAEE,IAAMC,EAAAA,EAAAA,MAEd,OACEC,EAAAA,cAACjB,EAAG,KACFiB,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAG,KACPF,EAAAA,cAACX,EAAI,KAAES,EAAE,SAEVD,EACEM,QACEC,KAA6DA,IAE/DC,KAAID,IACH,MAAMP,EAAwB,iBAAVO,EAAqB,CAAEA,QAAOF,GAAI,MAASE,EAC/D,OACEJ,EAAAA,cAACA,EAAAA,SAAc,CAACM,IAAKT,EAAKO,OACxBJ,EAAAA,cAACX,EAAI,KAAC,KACLQ,EAAKK,GACJF,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAIL,EAAKK,IACbF,EAAAA,cAACX,EAAI,KAAEQ,EAAKO,QAGdJ,EAAAA,cAACX,EAAI,KAAEQ,EAAKO,OAEC,IAK7B,C,qEC5CA,MAAMrB,E,QAAMC,QAAOC,IAAGC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAVJ,CAAU,uFAEPO,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMe,UAAU,IAMvC,SAASC,EAAcZ,GAC5B,MAAM,SAAEa,GAAab,EAErB,OAAOI,EAAAA,cAACjB,EAAG,KAAE0B,EACf,C,qECZA,MAAM1B,E,QAAMC,QAAO0B,GAAExB,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAATJ,CAAS,6FAGNO,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMmB,UAAUC,KAAK,IAElCC,IAAA,IAAC,MAAErB,GAAOqB,EAAA,OAAKrB,EAAMC,MAAMC,MAAM,IAG3C,SAASoB,EAAMlB,GACpB,MAAM,SAAEa,GAAab,EAErB,OAAOI,EAAAA,cAACjB,EAAG,KAAE0B,EACf,C,8ICIA,MAAM1B,EAAMC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAVJ,CAAU,sBACLO,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,MAAMC,MAAM,IAGnC,SAASqB,EAASnB,GAC/B,MACEoB,aAAa,KAAEC,IACbrB,GAEFsB,aAAa,MAAEN,GAAO,KACtBO,GACEF,EAEJ,OACEjB,EAAAA,cAACoB,EAAAA,EAAM,KACLpB,EAAAA,cAACqB,EAAAA,EAAG,CAACT,MAAOA,IACZZ,EAAAA,cAACQ,EAAAA,EAAa,KACZR,EAAAA,cAACL,EAAAA,EAAU,CAACE,KAAM,CAACe,KACnBZ,EAAAA,cAACc,EAAAA,EAAK,KAAEF,GACRZ,EAAAA,cAACjB,EAAG,CACFuC,wBAAyB,CACvBC,OAAQJ,MAMpB,C","sources":["webpack://jsconfjp-2023/./src/components/Breadcrumb.tsx","webpack://jsconfjp-2023/./src/components/ResponsiveBox.tsx","webpack://jsconfjp-2023/./src/components/Title.tsx","webpack://jsconfjp-2023/./src/templates/markdown.tsx"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { Link } from \"gatsby\"\n\nexport type Props = {\n  path: (string | null | { label: string; to: string })[]\n}\n\nconst Box = styled.div`\n  display: flex;\n`\nconst Text = styled.span`\n  margin-right: 0.5em;\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-family: ${({ theme }) => theme.fonts.header};\n  text-transform: uppercase;\n`\n\nexport function Breadcrumb(props: Props) {\n  const { path } = props\n  const { t } = useTranslation()\n\n  return (\n    <Box>\n      <Link to=\"/\">\n        <Text>{t(\"top\")}</Text>\n      </Link>\n      {path\n        .filter(\n          (label): label is string | { label: string; to: string } => !!label,\n        )\n        .map(label => {\n          const path = typeof label === \"string\" ? { label, to: null } : label\n          return (\n            <React.Fragment key={path.label}>\n              <Text>&gt;</Text>\n              {path.to ? (\n                <Link to={path.to}>\n                  <Text>{path.label}</Text>\n                </Link>\n              ) : (\n                <Text>{path.label}</Text>\n              )}\n            </React.Fragment>\n          )\n        })}\n    </Box>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n  children: React.ReactNode\n}\n\nconst Box = styled.div`\n  width: 100%;\n  max-width: ${({ theme }) => theme.innerWidth};\n  padding: 2em 1em 5em;\n  margin: 0 auto;\n  box-sizing: border-box;\n`\n\nexport function ResponsiveBox(props: Props) {\n  const { children } = props\n\n  return <Box>{children}</Box>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n  children: React.ReactNode\n}\n\nconst Box = styled.h1`\n  text-align: center;\n  margin: 40px 0 60px;\n  font-size: ${({ theme }) => theme.fontSizes.title};\n  text-transform: none;\n  font-family: ${({ theme }) => theme.fonts.header};\n`\n\nexport function Title(props: Props) {\n  const { children } = props\n\n  return <Box>{children}</Box>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { Layout } from \"../components/Layout\"\nimport { SEO } from \"../components/Seo\"\nimport { Title } from \"../components/Title\"\nimport { ResponsiveBox } from \"../components/ResponsiveBox\"\nimport { Breadcrumb } from \"../components/Breadcrumb\"\n\ntype Props = {\n  pageContext: {\n    post: {\n      fields: {\n        slug: string\n      }\n      frontmatter: {\n        title: string\n      }\n      html: string\n    }\n  }\n}\n\nconst Box = styled.div`\n  font-family: ${({ theme }) => theme.fonts.header};\n`\n\nexport default function Markdown(props: Props) {\n  const {\n    pageContext: { post },\n  } = props\n  const {\n    frontmatter: { title },\n    html,\n  } = post\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <ResponsiveBox>\n        <Breadcrumb path={[title]} />\n        <Title>{title}</Title>\n        <Box\n          dangerouslySetInnerHTML={{\n            __html: html,\n          }}\n        />\n      </ResponsiveBox>\n    </Layout>\n  )\n}\n"],"names":["Box","styled","div","withConfig","displayName","componentId","Text","span","_ref","theme","fonts","header","Breadcrumb","props","path","t","useTranslation","React","Link","to","filter","label","map","key","innerWidth","ResponsiveBox","children","h1","fontSizes","title","_ref2","Title","Markdown","pageContext","post","frontmatter","html","Layout","SEO","dangerouslySetInnerHTML","__html"],"sourceRoot":""}